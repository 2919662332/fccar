<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.itsource</groupId>
    <artifactId>it-faccar</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>it-fccar-basic</module>
        <module>it-fccar-service</module>
        <module>it-fccar-starter</module>
        <module>it-fccar-api</module>
        <module>it-fccar-support</module>
        <module>it-fccar-api</module>
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <fccar-version>1.0-SNAPSHOT</fccar-version>
        <fastjson.version>1.2.50</fastjson.version>
        <junit.version>4.12</junit.version>
        <hutool.version>5.7.14</hutool.version>
        <cloud.alibaba.version>2021.0.5.0</cloud.alibaba.version>
        <spring.cloud.version>2021.0.5</spring.cloud.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <logstash.version>5.2</logstash.version>
        <zipkin.version>2.2.8.RELEASE</zipkin.version>
        <knife4j.version>4.3.0</knife4j.version>
        <boot-admin.version>2.6.7</boot-admin.version>
        <httpcomponents.version>4.5.13</httpcomponents.version>
        <mybatisplus.version>3.3.1</mybatisplus.version>
        <mysql-connector.version>8.0.33</mysql-connector.version>
        <druid.version>1.1.23</druid.version>
        <velocity.version>2.1</velocity.version>
        <mybatisplus-tmp.version>3.3.1.tmp</mybatisplus-tmp.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <satoken.version>1.37.0</satoken.version>
        <springbootadmin.version>2.6.1</springbootadmin.version>
        <cos.version>5.6.155</cos.version>
        <rocketmq-version>2.2.3</rocketmq-version>
        <redisson-version>3.16.1</redisson-version>
        <hbase-version>5.0.0-HBase-2.0</hbase-version>

        <springboot.version>2.6.13</springboot.version>
    </properties>


    <!--SpringBoot依赖-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.13</version>
    </parent>

    <!--公共的依赖-->
    <dependencies>

        <!--lombok依赖-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!--fastdfs依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!--springboot测试依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!--工具包-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!--糊涂工具包-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
    </dependencies>


    <dependencyManagement>

        <dependencies>
            <dependency>
                <groupId>cn.itsource</groupId>
                <artifactId>it-fccar-api-uaa</artifactId>
                <version>${fccar-version}</version>
            </dependency>
            <!--SpringCloud-alibaba依赖-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--SpringCloud依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <!--代码生成模式插件  3.0.3以后需要手动设置依赖-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatisplus-tmp.version}</version>
            </dependency>
            <!-- 模板引擎 依赖，MyBatis-Plus 支持 Velocity-->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <!--数据库连接依赖-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!--连接池依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.itsource</groupId>
                <artifactId>it-fccar-common</artifactId>
                <version>${fccar-version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-gateway-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <!--日志收集-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <!--环境切换-->
        <profile>
            <id>fccar-dev</id>
            <properties>
                <profiles.active>fccar-dev</profiles.active>
                <nacos.namespace>dev</nacos.namespace>
                <nacos.addr>192.168.42.130:8848</nacos.addr>
                <nacos.gateway.prefix>it-fccar-gateway</nacos.gateway.prefix>
                <nacos.driver.prefix>it-fccar-service-driver</nacos.driver.prefix>
                <nacos.order.prefix>it-fccar-service-order</nacos.order.prefix>
                <nacos.rule.prefix>it-fccar-service-rule</nacos.rule.prefix>
                <nacos.pay.prefix>it-fccar-service-pay</nacos.pay.prefix>
                <nacos.uaa.prefix>it-fccar-service-uaa</nacos.uaa.prefix>
                <nacos.customer.prefix>it-fccar-service-customer</nacos.customer.prefix>
                <nacos.common.prefix>it-fccar-service-common</nacos.common.prefix>
                <nacos.bigdata.prefix>it-fccar-service-bigdata</nacos.bigdata.prefix>
                <nacos.group>DEFAULT_GROUP</nacos.group>
            </properties>
        </profile>
        <profile>
            <id>fccar-test</id>
            <properties>
                <profiles.active>fccar-test</profiles.active>
                <nacos.namespace>fccar-test</nacos.namespace>
                <nacos.addr>127.0.0.1:8848</nacos.addr>
            </properties>
        </profile>
        <profile>
            <id>fccar-prod</id>
            <properties>
                <profiles.active>fccar-prod</profiles.active>
                <nacos.namespace>fccar-prod</nacos.namespace>
                <nacos.addr>127.0.0.1:8848</nacos.addr>
            </properties>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- 添加插件后，可以在yaml中使用@配置@引用pom中的属性            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- maven-surefire-plugin 插件，用于运行单元测试。 -->
                <!-- 注意，需要使用 3.0.X+，因为要支持 Junit 5 版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <!-- maven-compiler-plugin 插件，解决 spring-boot-configuration-processor + Lombok + MapStruct 组合 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${springboot.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>